function [scrambledOut] = scrambler(input_seq)

genPoly = 'x^7 + x^3 + 1';   % Generator polynomial
shift = 7;                   % Shift value for output
spf = 1024;                   % Samples per frame
initState = [1 1 1 1 1 1 1]; % Initial shift register state

% ieee802_11_scram_seq = logical([ ...
%     0 0 0 0 1 1 1 0 1 1 1 1 0 0 1 0 1 1 0 0 1 ...
%     0 0 1 0 0 0 0 0 0 1 0 0 0 1 0 0 1 1 0 0 0 ...
%     1 0 1 1 1 0 1 0 1 1 0 1 1 0 0 0 0 0 1 1 0 ...
%     0 1 1 0 1 0 1 0 0 1 1 1 0 0 1 1 1 1 0 1 1 ...
%     0 1 0 0 0 0 1 0 1 0 1 0 1 1 1 1 1 0 1 0 0 ...
%     1 0 1 0 0 0 1 1 0 1 1 1 0 0 0 1 1 1 1 1 1 1])';

% pnSeq = comm.PNSequence( ...
%     Polynomial=genPoly, ...
%     InitialConditionsSource="Input Port", ...
%     Mask=shift, ...
%     SamplesPerFrame=spf, ...
%     OutputDataType="logical");
pnSeq = comm.PNSequence('Polynomial',genPoly,InitialConditionsSource="Input Port");

pnsequence = pnSeq(initState);


scrambledOut = xor(input_seq,pnSeq(initState));

end